[["week-3.html", "Week 3 Lecture in a nutshell Lab demonstration Additional readings Assignments", " Week 3 Logistic population growth and stability analysis Lecture in a nutshell Model derivation: Population growth rate: \\(Birth - Death + Immigration - Emigration\\) Per capita growth rate: \\((birth - death + immigration - emigration)\\times N\\). Assumptions: Closed population: \\(Immigration\\) = \\(Emigration = 0\\) All individuals are identical: no genetic/age/stage structure Continuous population growth without time lag Per capita birth and death rates are time-independent BUT density-dependent Resource is limited: negative density-dependence (NDD) \\(\\frac{dr_{(N)}}{dt} &lt; 0\\) Linear density-dependence: \\(b_{(n)} = b_{0}-b_{N}N\\); \\(d_{(n)} = d_{0}+d_{N}N\\) \\(\\begin{aligned}\\frac{dN}{dt}&amp;=(b_{0}-b_{N}N-d_{0}-d_{N}N)N\\\\&amp;=((b_{0}-d_{0})-(d_{N}+b_{N})N)N\\\\&amp;=(r_{0}-\\alpha N)N\\\\&amp;=r_{0}N(1-\\frac{N}{K})\\end{aligned}\\) Integration of the differential equation \\(N_{(t)} = \\frac{K}{1-\\frac{N_{0}-K}{N_{0}}e^{-r_{0}t}}\\) Equilibrium \\(N^*\\): good candidates where the system will end up \\(\\frac{dN}{dt} = f_{(N^*)} = r_{0}N^{*}(1-\\frac{N^*}{K}) = 0\\); \\(N^* = 0, K\\) Attracting (Stable) vs. Repelling (Unstable) vs. Saddle Graphical analysis Plot the function \\(\\frac{dN}{dt} = f(N)\\) and determine the direction of change (positive/negative) on both sides of the equilibrium points \\(N^*\\) Local stability analysis A small displacement from the equilibrium: \\(\\epsilon_{(t)} = N - N^*\\) Examine how \\(\\epsilon_{(t)}\\) changes over time (i.e., the behavior of the small displacement): \\(\\frac{d\\epsilon_{(t)}}{dt} = f(N-N^*) = f(N^*) + \\epsilon \\frac{dN}{dt}|_{N = N^*} + \\theta_{(\\epsilon^2)} \\approx \\epsilon\\frac{dN}{dt}|_{N = N^*} = \\lambda \\epsilon\\); \\(\\epsilon_{(t)} = \\epsilon_{0}e^{\\lambda t}\\) (the behavior of \\(\\epsilon_{(t)}\\) is determined by the sign of \\(\\lambda\\)) General procedure: take derivative of the differential equation with respect to \\(N\\) and evaluate it at the equilibrium point \\(N^*\\): \\(\\frac{dN}{dt}|_{N = N^*} = \\lambda &gt; 0\\): unstable equilibrium \\(\\frac{dN}{dt}|_{N = N^*} = \\lambda &lt; 0\\): stable equilibrium Lab demonstration In this lab, we will solve the differential equation for logistic population growth and visualize how the population sizes change over time. Have a quick review of the lab section in Week 2. We will also take a look at how population growth rate (\\(\\frac{dN}{dt}\\)) and per capita growth rate (\\(\\frac{dN}{dtN}\\)) change with population size (\\(N\\)). Part 1 - Solving the logistic growth equation and visualize the results library(tidyverse) library(deSolve) ### Model specification logistic_model &lt;- function(times, state, parms) { with(as.list(c(state, parms)), { dN_dt = r*N*(K-N)/K # logistic growth equation return(list(c(dN_dt))) # return the results }) } ### Model application times &lt;- seq(0, 10, by = 0.1) # time steps to integrate over state &lt;- c(N = 10) # initial population size parms &lt;- c(r = 1.5, K = 500) # intrinsic growth rate and carrying capacity # run the ode solver pop_size &lt;- ode(func = logistic_model, times = times, y = state, parms = parms) ### Visualize the results ggplot(data = as.data.frame(pop_size), aes(x = time, y = N)) + geom_point() + labs(title = paste0(&quot;Logistic Growth \\n (r = &quot;, parms[&quot;r&quot;], &quot;, K = &quot;, parms[&quot;K&quot;], &quot;)&quot;)) + theme_classic(base_size = 12) + theme(plot.title = element_text(hjust = 0.5)) + scale_x_continuous(limits = c(0, 10.5), expand = c(0, 0)) + scale_y_continuous(limits = c(0, max(as.data.frame(pop_size)$N)*1.1), expand = c(0, 0)) iframe {border: 0;} Here is an interactive web app for the logistic growth model. Feel free to play around with the parameters/values and see how the population trajectories change. Please select a set of parameters of your choice and reproduce the output figure you see in this app. Part 2 - The relationship between population growth rate (\\(\\frac{dN}{dt}\\))/per capita growth rate (\\(\\frac{dN}{dtN}\\)) and population size (\\(N\\)) # parameters r &lt;- 1.5 K &lt;- 500 # a vector of population sizes N &lt;- 0:600 # calculate the population growth rates and per capita growth rates dN_dt &lt;- r*N*(K-N)/K dN_dtN &lt;- r*(K-N)/K # organize into a dataframe logistic_data &lt;- data.frame(N, dN_dt, dN_dtN) %&gt;% pivot_longer(cols = c(dN_dt, dN_dtN), names_to = &quot;vars&quot;, values_to = &quot;values&quot;) # plot K_df &lt;- data.frame(xend = c(500, 500), yend = c(20, 0.1), xstart = c(500, 500), ystart = c(100, 0.5), labels = c(&quot;italic(K)&quot;, &quot;italic(K)&quot;), vars = c(&quot;dN_dt&quot;, &quot;dN_dtN&quot;)) ggplot(data = logistic_data, aes(x = N, y = values)) + geom_line(size = 1.2) + geom_point(x = 500, y = 0, size = 4, color = &quot;blue&quot;) + geom_hline(yintercept = 0, linetype = &quot;dashed&quot;, color = &quot;red&quot;, size = 1.2) + labs(x = &quot;N&quot;, y = &quot;&quot;) + facet_wrap(~vars, ncol = 2, scales = &quot;free_y&quot;, strip.position = &quot;left&quot;, labeller = as_labeller(c(dN_dt = &quot;dN/dt&quot;, dN_dtN = &quot;dN/dtN&quot;))) + theme_bw(base_size = 12) + theme(strip.background = element_blank(), strip.placement = &quot;outside&quot;, legend.position = &quot;top&quot;, legend.title = element_blank()) + scale_x_continuous(limits = c(0, 610), expand = c(0, 0)) + geom_segment(data = K_df, aes(x = xstart, y = ystart, xend = xend, yend = yend), arrow = arrow(length = unit(0.03, &quot;npc&quot;)), size = 1.2, color = &quot;blue&quot;) + geom_text(data = K_df, aes(x = xstart, y = ystart*1.2, label = labels), size = 5, color = &quot;blue&quot;, parse = T) Additional readings Logistic Growth Assignments Population Growth with Allee Effects "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
